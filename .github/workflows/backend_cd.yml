name: 백엔드 CD

on:
  push:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v4

      - name: JDK 17 설정
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: bootJar로 jar 파일 생성
        run: ./gradlew bootJar
        working-directory: ./backend

      - name: jar 파일 Artifact로 업로드
        uses: actions/upload-artifact@v4
        with:
          name: code-zap-jar
          path: backend/build/libs/*.jar

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: 브랜치명을 통해 개발 환경 알아내기
        run: |
          cd ${{ secrets.SCRIPT_DIRECTORY }}
          bash find-env-by-branch.sh
          
      - name: Artifact 다운로드
        uses: actions/download-artifact@v4
        with:
          name: code-zap-jar
          path: ${{ secrets.WORK_DIRECTORY }}/${{ env.ENVIRONMENT }}

      - name: 실행 프로세스 확인
        run: |
          cd ${{ secrets.SCRIPT_DIRECTORY }}
          bash check-old-pids.sh
        
      - name: 배포 스크립트 실행
        run: |
          cd ${{ secrets.WORK_DIRECTORY }}
          unzip -o code-zap-jar.zip
          cd ${{ secrets.SCRIPT_DIRECTORY }}
          RUNNER_TRACKING_ID="" && bash start.sh ${{ env.ENVIRONMENT }}
                    
      - name: 실행 프로세스 확인으로 배포 검증 
        run: |
          cd ${{ secrets.SCRIPT_DIRECTORY }}
          bash verify-deploy.sh
